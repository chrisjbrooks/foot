% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_distance.R
\name{fs_nndist}
\alias{fs_nndist}
\title{Nearest neighbour distance calculation}
\usage{
fs_nndist(X, Y, maxSearch = 100, unit = "m")
}
\arguments{
\item{X}{Spatial object of \code{sf} type, typically polygons or points.}

\item{Y}{(Optional) Spatial object to measure distances to.}

\item{maxSearch}{Maximum search radius around \code{X} to search. Distance in
meters. Default is 100. To ignore, set this to `NULL`.}

\item{unit}{Character abbreviation for the units to return from the distance
calculation.}
}
\description{
Helper function to provide a distance calculation between
  spatial objects. The distance to the first nearest neighbour found
  (optionally within a maximum search radius) is returned.
}
\details{
If \code{Y} is omitted the nearest neighbour distances are found
  within \code{X}. Otherwise, the distance for each object in \code{X} to its
  nearest neighbour in \code{Y} is returned. 
  
  Providing a maximum search radius is strongly advised to speed up the
  calculation.
}
\examples{
data("kampala")

# get sample of buildings
buildings <- kampala$buildings
buildings <- buildings[sample(1:nrow(buildings), size=100, replace=F),]
clusters <- kampala$clusters

# calculate distance between buildings in m
fs_nndist(buildings, unit="m")

# calculate unrestricted distance between buildings and points
fs_nndist(buildings, sf::st_centroid(clusters), maxSearch=NULL)

}
